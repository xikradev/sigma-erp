#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ErpSigmaVenda.linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="venda_produto")]
	public partial class dataContextErpSigmaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcliente(cliente instance);
    partial void Updatecliente(cliente instance);
    partial void Deletecliente(cliente instance);
    partial void Insertvenda(venda instance);
    partial void Updatevenda(venda instance);
    partial void Deletevenda(venda instance);
    partial void InsertItensVenda(ItensVenda instance);
    partial void UpdateItensVenda(ItensVenda instance);
    partial void DeleteItensVenda(ItensVenda instance);
    partial void Insertproduto(produto instance);
    partial void Updateproduto(produto instance);
    partial void Deleteproduto(produto instance);
    partial void Insertproduto_fornecedor(produto_fornecedor instance);
    partial void Updateproduto_fornecedor(produto_fornecedor instance);
    partial void Deleteproduto_fornecedor(produto_fornecedor instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    partial void Insertendereco(endereco instance);
    partial void Updateendereco(endereco instance);
    partial void Deleteendereco(endereco instance);
    partial void Insertfornecedor(fornecedor instance);
    partial void Updatefornecedor(fornecedor instance);
    partial void Deletefornecedor(fornecedor instance);
    #endregion
		
		public dataContextErpSigmaDataContext() : 
				base(global::ErpSigmaVenda.Properties.Settings.Default.venda_produtoConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dataContextErpSigmaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataContextErpSigmaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataContextErpSigmaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataContextErpSigmaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<cliente> cliente
		{
			get
			{
				return this.GetTable<cliente>();
			}
		}
		
		public System.Data.Linq.Table<venda> venda
		{
			get
			{
				return this.GetTable<venda>();
			}
		}
		
		public System.Data.Linq.Table<ItensVenda> ItensVenda
		{
			get
			{
				return this.GetTable<ItensVenda>();
			}
		}
		
		public System.Data.Linq.Table<produto> produto
		{
			get
			{
				return this.GetTable<produto>();
			}
		}
		
		public System.Data.Linq.Table<produto_fornecedor> produto_fornecedor
		{
			get
			{
				return this.GetTable<produto_fornecedor>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		public System.Data.Linq.Table<endereco> endereco
		{
			get
			{
				return this.GetTable<endereco>();
			}
		}
		
		public System.Data.Linq.Table<fornecedor> fornecedor
		{
			get
			{
				return this.GetTable<fornecedor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cliente")]
	public partial class cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idcliente;
		
		private string _nomeCompleto;
		
		private string _email;
		
		private string _registro;
		
		private System.DateTime _dataNascimento;
		
		private int _idendereco;
		
		private string _sexo;
		
		private string _seguimento;
		
		private EntitySet<venda> _venda;
		
		private EntityRef<endereco> _endereco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidclienteChanging(int value);
    partial void OnidclienteChanged();
    partial void OnnomeCompletoChanging(string value);
    partial void OnnomeCompletoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnregistroChanging(string value);
    partial void OnregistroChanged();
    partial void OndataNascimentoChanging(System.DateTime value);
    partial void OndataNascimentoChanged();
    partial void OnidenderecoChanging(int value);
    partial void OnidenderecoChanged();
    partial void OnsexoChanging(string value);
    partial void OnsexoChanged();
    partial void OnseguimentoChanging(string value);
    partial void OnseguimentoChanged();
    #endregion
		
		public cliente()
		{
			this._venda = new EntitySet<venda>(new Action<venda>(this.attach_venda), new Action<venda>(this.detach_venda));
			this._endereco = default(EntityRef<endereco>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idcliente
		{
			get
			{
				return this._idcliente;
			}
			set
			{
				if ((this._idcliente != value))
				{
					this.OnidclienteChanging(value);
					this.SendPropertyChanging();
					this._idcliente = value;
					this.SendPropertyChanged("idcliente");
					this.OnidclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeCompleto", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nomeCompleto
		{
			get
			{
				return this._nomeCompleto;
			}
			set
			{
				if ((this._nomeCompleto != value))
				{
					this.OnnomeCompletoChanging(value);
					this.SendPropertyChanging();
					this._nomeCompleto = value;
					this.SendPropertyChanged("nomeCompleto");
					this.OnnomeCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registro", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string registro
		{
			get
			{
				return this._registro;
			}
			set
			{
				if ((this._registro != value))
				{
					this.OnregistroChanging(value);
					this.SendPropertyChanging();
					this._registro = value;
					this.SendPropertyChanged("registro");
					this.OnregistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataNascimento", DbType="DateTime NOT NULL")]
		public System.DateTime dataNascimento
		{
			get
			{
				return this._dataNascimento;
			}
			set
			{
				if ((this._dataNascimento != value))
				{
					this.OndataNascimentoChanging(value);
					this.SendPropertyChanging();
					this._dataNascimento = value;
					this.SendPropertyChanged("dataNascimento");
					this.OndataNascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idendereco", DbType="Int NOT NULL")]
		public int idendereco
		{
			get
			{
				return this._idendereco;
			}
			set
			{
				if ((this._idendereco != value))
				{
					if (this._endereco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidenderecoChanging(value);
					this.SendPropertyChanging();
					this._idendereco = value;
					this.SendPropertyChanged("idendereco");
					this.OnidenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="Char(3)")]
		public string sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seguimento", DbType="VarChar(100)")]
		public string seguimento
		{
			get
			{
				return this._seguimento;
			}
			set
			{
				if ((this._seguimento != value))
				{
					this.OnseguimentoChanging(value);
					this.SendPropertyChanging();
					this._seguimento = value;
					this.SendPropertyChanged("seguimento");
					this.OnseguimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_venda", Storage="_venda", ThisKey="idcliente", OtherKey="idcliente")]
		public EntitySet<venda> venda
		{
			get
			{
				return this._venda;
			}
			set
			{
				this._venda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="endereco_cliente", Storage="_endereco", ThisKey="idendereco", OtherKey="idendereco", IsForeignKey=true)]
		public endereco endereco
		{
			get
			{
				return this._endereco.Entity;
			}
			set
			{
				endereco previousValue = this._endereco.Entity;
				if (((previousValue != value) 
							|| (this._endereco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._endereco.Entity = null;
						previousValue.cliente.Remove(this);
					}
					this._endereco.Entity = value;
					if ((value != null))
					{
						value.cliente.Add(this);
						this._idendereco = value.idendereco;
					}
					else
					{
						this._idendereco = default(int);
					}
					this.SendPropertyChanged("endereco");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_venda(venda entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_venda(venda entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.venda")]
	public partial class venda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idvenda;
		
		private int _idusuario;
		
		private int _idcliente;
		
		private decimal _precoTotal;
		
		private System.DateTime _data;
		
		private string _metodo_pagamento;
		
		private EntitySet<ItensVenda> _ItensVenda;
		
		private EntityRef<cliente> _cliente;
		
		private EntityRef<usuario> _usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidvendaChanging(int value);
    partial void OnidvendaChanged();
    partial void OnidusuarioChanging(int value);
    partial void OnidusuarioChanged();
    partial void OnidclienteChanging(int value);
    partial void OnidclienteChanged();
    partial void OnprecoTotalChanging(decimal value);
    partial void OnprecoTotalChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void Onmetodo_pagamentoChanging(string value);
    partial void Onmetodo_pagamentoChanged();
    #endregion
		
		public venda()
		{
			this._ItensVenda = new EntitySet<ItensVenda>(new Action<ItensVenda>(this.attach_ItensVenda), new Action<ItensVenda>(this.detach_ItensVenda));
			this._cliente = default(EntityRef<cliente>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idvenda", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idvenda
		{
			get
			{
				return this._idvenda;
			}
			set
			{
				if ((this._idvenda != value))
				{
					this.OnidvendaChanging(value);
					this.SendPropertyChanging();
					this._idvenda = value;
					this.SendPropertyChanged("idvenda");
					this.OnidvendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idusuario", DbType="Int NOT NULL")]
		public int idusuario
		{
			get
			{
				return this._idusuario;
			}
			set
			{
				if ((this._idusuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidusuarioChanging(value);
					this.SendPropertyChanging();
					this._idusuario = value;
					this.SendPropertyChanged("idusuario");
					this.OnidusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcliente", DbType="Int NOT NULL")]
		public int idcliente
		{
			get
			{
				return this._idcliente;
			}
			set
			{
				if ((this._idcliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidclienteChanging(value);
					this.SendPropertyChanging();
					this._idcliente = value;
					this.SendPropertyChanged("idcliente");
					this.OnidclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precoTotal", DbType="Decimal(30,2) NOT NULL")]
		public decimal precoTotal
		{
			get
			{
				return this._precoTotal;
			}
			set
			{
				if ((this._precoTotal != value))
				{
					this.OnprecoTotalChanging(value);
					this.SendPropertyChanging();
					this._precoTotal = value;
					this.SendPropertyChanged("precoTotal");
					this.OnprecoTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metodo_pagamento", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string metodo_pagamento
		{
			get
			{
				return this._metodo_pagamento;
			}
			set
			{
				if ((this._metodo_pagamento != value))
				{
					this.Onmetodo_pagamentoChanging(value);
					this.SendPropertyChanging();
					this._metodo_pagamento = value;
					this.SendPropertyChanged("metodo_pagamento");
					this.Onmetodo_pagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="venda_ItensVenda", Storage="_ItensVenda", ThisKey="idvenda", OtherKey="idvenda")]
		public EntitySet<ItensVenda> ItensVenda
		{
			get
			{
				return this._ItensVenda;
			}
			set
			{
				this._ItensVenda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_venda", Storage="_cliente", ThisKey="idcliente", OtherKey="idcliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.venda.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.venda.Add(this);
						this._idcliente = value.idcliente;
					}
					else
					{
						this._idcliente = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_venda", Storage="_usuario", ThisKey="idusuario", OtherKey="idusuario", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.venda.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.venda.Add(this);
						this._idusuario = value.idusuario;
					}
					else
					{
						this._idusuario = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.venda = this;
		}
		
		private void detach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.venda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItensVenda")]
	public partial class ItensVenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iditem;
		
		private int _idvenda;
		
		private int _idproduto;
		
		private int _quantidade;
		
		private decimal _precoUnit;
		
		private decimal _precoTotal;
		
		private EntityRef<venda> _venda;
		
		private EntityRef<produto> _produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniditemChanging(int value);
    partial void OniditemChanged();
    partial void OnidvendaChanging(int value);
    partial void OnidvendaChanged();
    partial void OnidprodutoChanging(int value);
    partial void OnidprodutoChanged();
    partial void OnquantidadeChanging(int value);
    partial void OnquantidadeChanged();
    partial void OnprecoUnitChanging(decimal value);
    partial void OnprecoUnitChanged();
    partial void OnprecoTotalChanging(decimal value);
    partial void OnprecoTotalChanged();
    #endregion
		
		public ItensVenda()
		{
			this._venda = default(EntityRef<venda>);
			this._produto = default(EntityRef<produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iditem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iditem
		{
			get
			{
				return this._iditem;
			}
			set
			{
				if ((this._iditem != value))
				{
					this.OniditemChanging(value);
					this.SendPropertyChanging();
					this._iditem = value;
					this.SendPropertyChanged("iditem");
					this.OniditemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idvenda", DbType="Int NOT NULL")]
		public int idvenda
		{
			get
			{
				return this._idvenda;
			}
			set
			{
				if ((this._idvenda != value))
				{
					if (this._venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvendaChanging(value);
					this.SendPropertyChanging();
					this._idvenda = value;
					this.SendPropertyChanged("idvenda");
					this.OnidvendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idproduto", DbType="Int NOT NULL")]
		public int idproduto
		{
			get
			{
				return this._idproduto;
			}
			set
			{
				if ((this._idproduto != value))
				{
					if (this._produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidprodutoChanging(value);
					this.SendPropertyChanging();
					this._idproduto = value;
					this.SendPropertyChanged("idproduto");
					this.OnidprodutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantidade", DbType="Int NOT NULL")]
		public int quantidade
		{
			get
			{
				return this._quantidade;
			}
			set
			{
				if ((this._quantidade != value))
				{
					this.OnquantidadeChanging(value);
					this.SendPropertyChanging();
					this._quantidade = value;
					this.SendPropertyChanged("quantidade");
					this.OnquantidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precoUnit", DbType="Decimal(10,2) NOT NULL")]
		public decimal precoUnit
		{
			get
			{
				return this._precoUnit;
			}
			set
			{
				if ((this._precoUnit != value))
				{
					this.OnprecoUnitChanging(value);
					this.SendPropertyChanging();
					this._precoUnit = value;
					this.SendPropertyChanged("precoUnit");
					this.OnprecoUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precoTotal", DbType="Decimal(10,2) NOT NULL")]
		public decimal precoTotal
		{
			get
			{
				return this._precoTotal;
			}
			set
			{
				if ((this._precoTotal != value))
				{
					this.OnprecoTotalChanging(value);
					this.SendPropertyChanging();
					this._precoTotal = value;
					this.SendPropertyChanged("precoTotal");
					this.OnprecoTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="venda_ItensVenda", Storage="_venda", ThisKey="idvenda", OtherKey="idvenda", IsForeignKey=true)]
		public venda venda
		{
			get
			{
				return this._venda.Entity;
			}
			set
			{
				venda previousValue = this._venda.Entity;
				if (((previousValue != value) 
							|| (this._venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._venda.Entity = null;
						previousValue.ItensVenda.Remove(this);
					}
					this._venda.Entity = value;
					if ((value != null))
					{
						value.ItensVenda.Add(this);
						this._idvenda = value.idvenda;
					}
					else
					{
						this._idvenda = default(int);
					}
					this.SendPropertyChanged("venda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produto_ItensVenda", Storage="_produto", ThisKey="idproduto", OtherKey="idproduto", IsForeignKey=true)]
		public produto produto
		{
			get
			{
				return this._produto.Entity;
			}
			set
			{
				produto previousValue = this._produto.Entity;
				if (((previousValue != value) 
							|| (this._produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produto.Entity = null;
						previousValue.ItensVenda.Remove(this);
					}
					this._produto.Entity = value;
					if ((value != null))
					{
						value.ItensVenda.Add(this);
						this._idproduto = value.idproduto;
					}
					else
					{
						this._idproduto = default(int);
					}
					this.SendPropertyChanged("produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produto")]
	public partial class produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idproduto;
		
		private string _nome;
		
		private decimal _preco;
		
		private string _descricao;
		
		private int _estoque_qnt;
		
		private EntitySet<ItensVenda> _ItensVenda;
		
		private EntitySet<produto_fornecedor> _produto_fornecedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidprodutoChanging(int value);
    partial void OnidprodutoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnprecoChanging(decimal value);
    partial void OnprecoChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    partial void Onestoque_qntChanging(int value);
    partial void Onestoque_qntChanged();
    #endregion
		
		public produto()
		{
			this._ItensVenda = new EntitySet<ItensVenda>(new Action<ItensVenda>(this.attach_ItensVenda), new Action<ItensVenda>(this.detach_ItensVenda));
			this._produto_fornecedor = new EntitySet<produto_fornecedor>(new Action<produto_fornecedor>(this.attach_produto_fornecedor), new Action<produto_fornecedor>(this.detach_produto_fornecedor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idproduto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idproduto
		{
			get
			{
				return this._idproduto;
			}
			set
			{
				if ((this._idproduto != value))
				{
					this.OnidprodutoChanging(value);
					this.SendPropertyChanging();
					this._idproduto = value;
					this.SendPropertyChanged("idproduto");
					this.OnidprodutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preco", DbType="Decimal(10,2) NOT NULL")]
		public decimal preco
		{
			get
			{
				return this._preco;
			}
			set
			{
				if ((this._preco != value))
				{
					this.OnprecoChanging(value);
					this.SendPropertyChanging();
					this._preco = value;
					this.SendPropertyChanged("preco");
					this.OnprecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estoque_qnt", DbType="Int NOT NULL")]
		public int estoque_qnt
		{
			get
			{
				return this._estoque_qnt;
			}
			set
			{
				if ((this._estoque_qnt != value))
				{
					this.Onestoque_qntChanging(value);
					this.SendPropertyChanging();
					this._estoque_qnt = value;
					this.SendPropertyChanged("estoque_qnt");
					this.Onestoque_qntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produto_ItensVenda", Storage="_ItensVenda", ThisKey="idproduto", OtherKey="idproduto")]
		public EntitySet<ItensVenda> ItensVenda
		{
			get
			{
				return this._ItensVenda;
			}
			set
			{
				this._ItensVenda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produto_produto_fornecedor", Storage="_produto_fornecedor", ThisKey="idproduto", OtherKey="idproduto")]
		public EntitySet<produto_fornecedor> produto_fornecedor
		{
			get
			{
				return this._produto_fornecedor;
			}
			set
			{
				this._produto_fornecedor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.produto = this;
		}
		
		private void detach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.produto = null;
		}
		
		private void attach_produto_fornecedor(produto_fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.produto = this;
		}
		
		private void detach_produto_fornecedor(produto_fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produto_fornecedor")]
	public partial class produto_fornecedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codProduto;
		
		private int _idfornecedor;
		
		private int _idproduto;
		
		private EntityRef<produto> _produto;
		
		private EntityRef<fornecedor> _fornecedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodProdutoChanging(int value);
    partial void OncodProdutoChanged();
    partial void OnidfornecedorChanging(int value);
    partial void OnidfornecedorChanged();
    partial void OnidprodutoChanging(int value);
    partial void OnidprodutoChanged();
    #endregion
		
		public produto_fornecedor()
		{
			this._produto = default(EntityRef<produto>);
			this._fornecedor = default(EntityRef<fornecedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codProduto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codProduto
		{
			get
			{
				return this._codProduto;
			}
			set
			{
				if ((this._codProduto != value))
				{
					this.OncodProdutoChanging(value);
					this.SendPropertyChanging();
					this._codProduto = value;
					this.SendPropertyChanged("codProduto");
					this.OncodProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idfornecedor", DbType="Int NOT NULL")]
		public int idfornecedor
		{
			get
			{
				return this._idfornecedor;
			}
			set
			{
				if ((this._idfornecedor != value))
				{
					if (this._fornecedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidfornecedorChanging(value);
					this.SendPropertyChanging();
					this._idfornecedor = value;
					this.SendPropertyChanged("idfornecedor");
					this.OnidfornecedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idproduto", DbType="Int NOT NULL")]
		public int idproduto
		{
			get
			{
				return this._idproduto;
			}
			set
			{
				if ((this._idproduto != value))
				{
					if (this._produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidprodutoChanging(value);
					this.SendPropertyChanging();
					this._idproduto = value;
					this.SendPropertyChanged("idproduto");
					this.OnidprodutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produto_produto_fornecedor", Storage="_produto", ThisKey="idproduto", OtherKey="idproduto", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public produto produto
		{
			get
			{
				return this._produto.Entity;
			}
			set
			{
				produto previousValue = this._produto.Entity;
				if (((previousValue != value) 
							|| (this._produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produto.Entity = null;
						previousValue.produto_fornecedor.Remove(this);
					}
					this._produto.Entity = value;
					if ((value != null))
					{
						value.produto_fornecedor.Add(this);
						this._idproduto = value.idproduto;
					}
					else
					{
						this._idproduto = default(int);
					}
					this.SendPropertyChanged("produto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fornecedor_produto_fornecedor", Storage="_fornecedor", ThisKey="idfornecedor", OtherKey="idfornecedor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public fornecedor fornecedor
		{
			get
			{
				return this._fornecedor.Entity;
			}
			set
			{
				fornecedor previousValue = this._fornecedor.Entity;
				if (((previousValue != value) 
							|| (this._fornecedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fornecedor.Entity = null;
						previousValue.produto_fornecedor.Remove(this);
					}
					this._fornecedor.Entity = value;
					if ((value != null))
					{
						value.produto_fornecedor.Add(this);
						this._idfornecedor = value.idfornecedor;
					}
					else
					{
						this._idfornecedor = default(int);
					}
					this.SendPropertyChanged("fornecedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idusuario;
		
		private string _nomeCompleto;
		
		private string _email;
		
		private string _senha;
		
		private string _cpf;
		
		private System.DateTime _dataNascimento;
		
		private int _idendereco;
		
		private string _role;
		
		private string _sexo;
		
		private EntitySet<venda> _venda;
		
		private EntityRef<endereco> _endereco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidusuarioChanging(int value);
    partial void OnidusuarioChanged();
    partial void OnnomeCompletoChanging(string value);
    partial void OnnomeCompletoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsenhaChanging(string value);
    partial void OnsenhaChanged();
    partial void OncpfChanging(string value);
    partial void OncpfChanged();
    partial void OndataNascimentoChanging(System.DateTime value);
    partial void OndataNascimentoChanged();
    partial void OnidenderecoChanging(int value);
    partial void OnidenderecoChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnsexoChanging(string value);
    partial void OnsexoChanged();
    #endregion
		
		public usuario()
		{
			this._venda = new EntitySet<venda>(new Action<venda>(this.attach_venda), new Action<venda>(this.detach_venda));
			this._endereco = default(EntityRef<endereco>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idusuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idusuario
		{
			get
			{
				return this._idusuario;
			}
			set
			{
				if ((this._idusuario != value))
				{
					this.OnidusuarioChanging(value);
					this.SendPropertyChanging();
					this._idusuario = value;
					this.SendPropertyChanged("idusuario");
					this.OnidusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeCompleto", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nomeCompleto
		{
			get
			{
				return this._nomeCompleto;
			}
			set
			{
				if ((this._nomeCompleto != value))
				{
					this.OnnomeCompletoChanging(value);
					this.SendPropertyChanging();
					this._nomeCompleto = value;
					this.SendPropertyChanged("nomeCompleto");
					this.OnnomeCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_senha", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string senha
		{
			get
			{
				return this._senha;
			}
			set
			{
				if ((this._senha != value))
				{
					this.OnsenhaChanging(value);
					this.SendPropertyChanging();
					this._senha = value;
					this.SendPropertyChanged("senha");
					this.OnsenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpf", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string cpf
		{
			get
			{
				return this._cpf;
			}
			set
			{
				if ((this._cpf != value))
				{
					this.OncpfChanging(value);
					this.SendPropertyChanging();
					this._cpf = value;
					this.SendPropertyChanged("cpf");
					this.OncpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataNascimento", DbType="DateTime NOT NULL")]
		public System.DateTime dataNascimento
		{
			get
			{
				return this._dataNascimento;
			}
			set
			{
				if ((this._dataNascimento != value))
				{
					this.OndataNascimentoChanging(value);
					this.SendPropertyChanging();
					this._dataNascimento = value;
					this.SendPropertyChanged("dataNascimento");
					this.OndataNascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idendereco", DbType="Int NOT NULL")]
		public int idendereco
		{
			get
			{
				return this._idendereco;
			}
			set
			{
				if ((this._idendereco != value))
				{
					if (this._endereco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidenderecoChanging(value);
					this.SendPropertyChanging();
					this._idendereco = value;
					this.SendPropertyChanged("idendereco");
					this.OnidenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_venda", Storage="_venda", ThisKey="idusuario", OtherKey="idusuario")]
		public EntitySet<venda> venda
		{
			get
			{
				return this._venda;
			}
			set
			{
				this._venda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="endereco_usuario", Storage="_endereco", ThisKey="idendereco", OtherKey="idendereco", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public endereco endereco
		{
			get
			{
				return this._endereco.Entity;
			}
			set
			{
				endereco previousValue = this._endereco.Entity;
				if (((previousValue != value) 
							|| (this._endereco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._endereco.Entity = null;
						previousValue.usuario.Remove(this);
					}
					this._endereco.Entity = value;
					if ((value != null))
					{
						value.usuario.Add(this);
						this._idendereco = value.idendereco;
					}
					else
					{
						this._idendereco = default(int);
					}
					this.SendPropertyChanged("endereco");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_venda(venda entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_venda(venda entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.endereco")]
	public partial class endereco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idendereco;
		
		private string _rua;
		
		private string _complemento;
		
		private string _cep;
		
		private System.Nullable<int> _numero;
		
		private string _estado;
		
		private string _cidade;
		
		private EntitySet<cliente> _cliente;
		
		private EntitySet<usuario> _usuario;
		
		private EntitySet<fornecedor> _fornecedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidenderecoChanging(int value);
    partial void OnidenderecoChanged();
    partial void OnruaChanging(string value);
    partial void OnruaChanged();
    partial void OncomplementoChanging(string value);
    partial void OncomplementoChanged();
    partial void OncepChanging(string value);
    partial void OncepChanged();
    partial void OnnumeroChanging(System.Nullable<int> value);
    partial void OnnumeroChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OncidadeChanging(string value);
    partial void OncidadeChanged();
    #endregion
		
		public endereco()
		{
			this._cliente = new EntitySet<cliente>(new Action<cliente>(this.attach_cliente), new Action<cliente>(this.detach_cliente));
			this._usuario = new EntitySet<usuario>(new Action<usuario>(this.attach_usuario), new Action<usuario>(this.detach_usuario));
			this._fornecedor = new EntitySet<fornecedor>(new Action<fornecedor>(this.attach_fornecedor), new Action<fornecedor>(this.detach_fornecedor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idendereco", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idendereco
		{
			get
			{
				return this._idendereco;
			}
			set
			{
				if ((this._idendereco != value))
				{
					this.OnidenderecoChanging(value);
					this.SendPropertyChanging();
					this._idendereco = value;
					this.SendPropertyChanged("idendereco");
					this.OnidenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rua", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string rua
		{
			get
			{
				return this._rua;
			}
			set
			{
				if ((this._rua != value))
				{
					this.OnruaChanging(value);
					this.SendPropertyChanging();
					this._rua = value;
					this.SendPropertyChanged("rua");
					this.OnruaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_complemento", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string complemento
		{
			get
			{
				return this._complemento;
			}
			set
			{
				if ((this._complemento != value))
				{
					this.OncomplementoChanging(value);
					this.SendPropertyChanging();
					this._complemento = value;
					this.SendPropertyChanged("complemento");
					this.OncomplementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cep", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string cep
		{
			get
			{
				return this._cep;
			}
			set
			{
				if ((this._cep != value))
				{
					this.OncepChanging(value);
					this.SendPropertyChanging();
					this._cep = value;
					this.SendPropertyChanged("cep");
					this.OncepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="Int")]
		public System.Nullable<int> numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cidade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cidade
		{
			get
			{
				return this._cidade;
			}
			set
			{
				if ((this._cidade != value))
				{
					this.OncidadeChanging(value);
					this.SendPropertyChanging();
					this._cidade = value;
					this.SendPropertyChanged("cidade");
					this.OncidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="endereco_cliente", Storage="_cliente", ThisKey="idendereco", OtherKey="idendereco")]
		public EntitySet<cliente> cliente
		{
			get
			{
				return this._cliente;
			}
			set
			{
				this._cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="endereco_usuario", Storage="_usuario", ThisKey="idendereco", OtherKey="idendereco")]
		public EntitySet<usuario> usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				this._usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="endereco_fornecedor", Storage="_fornecedor", ThisKey="idendereco", OtherKey="idendereco")]
		public EntitySet<fornecedor> fornecedor
		{
			get
			{
				return this._fornecedor;
			}
			set
			{
				this._fornecedor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.endereco = this;
		}
		
		private void detach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.endereco = null;
		}
		
		private void attach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.endereco = this;
		}
		
		private void detach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.endereco = null;
		}
		
		private void attach_fornecedor(fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.endereco = this;
		}
		
		private void detach_fornecedor(fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.endereco = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fornecedor")]
	public partial class fornecedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idfornecedor;
		
		private int _idendereco;
		
		private string _nomeCompleto;
		
		private string _registro;
		
		private string _email;
		
		private System.DateTime _dataNascimento;
		
		private string _sexo;
		
		private string _seguimento;
		
		private EntitySet<produto_fornecedor> _produto_fornecedor;
		
		private EntityRef<endereco> _endereco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidfornecedorChanging(int value);
    partial void OnidfornecedorChanged();
    partial void OnidenderecoChanging(int value);
    partial void OnidenderecoChanged();
    partial void OnnomeCompletoChanging(string value);
    partial void OnnomeCompletoChanged();
    partial void OnregistroChanging(string value);
    partial void OnregistroChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndataNascimentoChanging(System.DateTime value);
    partial void OndataNascimentoChanged();
    partial void OnsexoChanging(string value);
    partial void OnsexoChanged();
    partial void OnseguimentoChanging(string value);
    partial void OnseguimentoChanged();
    #endregion
		
		public fornecedor()
		{
			this._produto_fornecedor = new EntitySet<produto_fornecedor>(new Action<produto_fornecedor>(this.attach_produto_fornecedor), new Action<produto_fornecedor>(this.detach_produto_fornecedor));
			this._endereco = default(EntityRef<endereco>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idfornecedor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idfornecedor
		{
			get
			{
				return this._idfornecedor;
			}
			set
			{
				if ((this._idfornecedor != value))
				{
					this.OnidfornecedorChanging(value);
					this.SendPropertyChanging();
					this._idfornecedor = value;
					this.SendPropertyChanged("idfornecedor");
					this.OnidfornecedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idendereco", DbType="Int NOT NULL")]
		public int idendereco
		{
			get
			{
				return this._idendereco;
			}
			set
			{
				if ((this._idendereco != value))
				{
					if (this._endereco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidenderecoChanging(value);
					this.SendPropertyChanging();
					this._idendereco = value;
					this.SendPropertyChanged("idendereco");
					this.OnidenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeCompleto", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nomeCompleto
		{
			get
			{
				return this._nomeCompleto;
			}
			set
			{
				if ((this._nomeCompleto != value))
				{
					this.OnnomeCompletoChanging(value);
					this.SendPropertyChanging();
					this._nomeCompleto = value;
					this.SendPropertyChanged("nomeCompleto");
					this.OnnomeCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registro", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string registro
		{
			get
			{
				return this._registro;
			}
			set
			{
				if ((this._registro != value))
				{
					this.OnregistroChanging(value);
					this.SendPropertyChanging();
					this._registro = value;
					this.SendPropertyChanged("registro");
					this.OnregistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataNascimento", DbType="DateTime NOT NULL")]
		public System.DateTime dataNascimento
		{
			get
			{
				return this._dataNascimento;
			}
			set
			{
				if ((this._dataNascimento != value))
				{
					this.OndataNascimentoChanging(value);
					this.SendPropertyChanging();
					this._dataNascimento = value;
					this.SendPropertyChanged("dataNascimento");
					this.OndataNascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="Char(3)")]
		public string sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seguimento", DbType="VarChar(100)")]
		public string seguimento
		{
			get
			{
				return this._seguimento;
			}
			set
			{
				if ((this._seguimento != value))
				{
					this.OnseguimentoChanging(value);
					this.SendPropertyChanging();
					this._seguimento = value;
					this.SendPropertyChanged("seguimento");
					this.OnseguimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fornecedor_produto_fornecedor", Storage="_produto_fornecedor", ThisKey="idfornecedor", OtherKey="idfornecedor")]
		public EntitySet<produto_fornecedor> produto_fornecedor
		{
			get
			{
				return this._produto_fornecedor;
			}
			set
			{
				this._produto_fornecedor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="endereco_fornecedor", Storage="_endereco", ThisKey="idendereco", OtherKey="idendereco", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public endereco endereco
		{
			get
			{
				return this._endereco.Entity;
			}
			set
			{
				endereco previousValue = this._endereco.Entity;
				if (((previousValue != value) 
							|| (this._endereco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._endereco.Entity = null;
						previousValue.fornecedor.Remove(this);
					}
					this._endereco.Entity = value;
					if ((value != null))
					{
						value.fornecedor.Add(this);
						this._idendereco = value.idendereco;
					}
					else
					{
						this._idendereco = default(int);
					}
					this.SendPropertyChanged("endereco");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_produto_fornecedor(produto_fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.fornecedor = this;
		}
		
		private void detach_produto_fornecedor(produto_fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.fornecedor = null;
		}
	}
}
#pragma warning restore 1591
